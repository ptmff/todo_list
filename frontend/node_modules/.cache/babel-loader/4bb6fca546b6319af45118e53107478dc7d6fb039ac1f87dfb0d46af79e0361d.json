{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n\n// Асинхронное действие для загрузки задач с сервера\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await fetch(`${API_URL}/tasks`);\n  const data = await response.json();\n  // Объединяем невыполненные и выполненные задачи в один массив\n  return [...data.pending, ...data.completed];\n});\n\n// Асинхронное действие для добавления задачи\nexport const addTodo = createAsyncThunk('todos/addTodo', async text => {\n  const response = await fetch(`${API_URL}/tasks`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      text\n    })\n  });\n  return await response.json();\n});\n\n// Асинхронное действие для обновления задачи (в том числе для изменения статуса)\nexport const updateTodo = createAsyncThunk('todos/updateTodo', async ({\n  id,\n  text,\n  completed\n}) => {\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      text,\n      completed\n    })\n  });\n  return await response.json();\n});\n\n// Асинхронное действие для удаления задачи\nexport const deleteTodo = createAsyncThunk('todos/deleteTodo', async id => {\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\n    method: 'DELETE'\n  });\n  return await response.json();\n});\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Загрузка задач\n    .addCase(fetchTodos.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchTodos.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(fetchTodos.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    })\n    // Добавление задачи\n    .addCase(addTodo.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    })\n    // Обновление задачи\n    .addCase(updateTodo.fulfilled, (state, action) => {\n      const index = state.items.findIndex(todo => todo.id === action.payload.id);\n      if (index !== -1) {\n        state.items[index] = action.payload;\n      }\n    })\n    // Удаление задачи\n    .addCase(deleteTodo.fulfilled, (state, action) => {\n      state.items = state.items.filter(todo => todo.id !== action.payload.id);\n    });\n  }\n});\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API_URL","process","env","REACT_APP_API_URL","fetchTodos","response","fetch","data","json","pending","completed","addTodo","text","method","headers","body","JSON","stringify","updateTodo","id","deleteTodo","todoSlice","name","initialState","items","status","error","reducers","extraReducers","builder","addCase","state","fulfilled","action","payload","rejected","message","push","index","findIndex","todo","filter","reducer"],"sources":["/Users/ptmff/Documents/Проекты/TODO_List/todo_list/frontend/src/store/todoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n\n// Асинхронное действие для загрузки задач с сервера\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await fetch(`${API_URL}/tasks`);\n  const data = await response.json();\n  // Объединяем невыполненные и выполненные задачи в один массив\n  return [...data.pending, ...data.completed];\n});\n\n// Асинхронное действие для добавления задачи\nexport const addTodo = createAsyncThunk('todos/addTodo', async (text) => {\n  const response = await fetch(`${API_URL}/tasks`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ text })\n  });\n  return await response.json();\n});\n\n// Асинхронное действие для обновления задачи (в том числе для изменения статуса)\nexport const updateTodo = createAsyncThunk('todos/updateTodo', async ({ id, text, completed }) => {\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ text, completed })\n  });\n  return await response.json();\n});\n\n// Асинхронное действие для удаления задачи\nexport const deleteTodo = createAsyncThunk('todos/deleteTodo', async (id) => {\n  const response = await fetch(`${API_URL}/tasks/${id}`, {\n    method: 'DELETE'\n  });\n  return await response.json();\n});\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      // Загрузка задач\n      .addCase(fetchTodos.pending, (state) => { state.status = 'loading'; })\n      .addCase(fetchTodos.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.items = action.payload;\n      })\n      .addCase(fetchTodos.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      })\n      // Добавление задачи\n      .addCase(addTodo.fulfilled, (state, action) => {\n        state.items.push(action.payload);\n      })\n      // Обновление задачи\n      .addCase(updateTodo.fulfilled, (state, action) => {\n        const index = state.items.findIndex(todo => todo.id === action.payload.id);\n        if (index !== -1) {\n          state.items[index] = action.payload;\n        }\n      })\n      // Удаление задачи\n      .addCase(deleteTodo.fulfilled, (state, action) => {\n        state.items = state.items.filter(todo => todo.id !== action.payload.id);\n      });\n  },\n});\n\nexport default todoSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}