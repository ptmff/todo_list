{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Асинхронное действие для загрузки данных (пример имитации API-запроса)\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await new Promise(resolve => {\n    setTimeout(() => {\n      resolve([{\n        id: 1,\n        text: 'Sample Todo',\n        completed: false\n      }]);\n    }, 1000);\n  });\n  return response;\n});\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    addTodo: (state, action) => {\n      state.items.push(action.payload);\n    },\n    removeTodo: (state, action) => {\n      state.items = state.items.filter(todo => todo.id !== action.payload);\n    },\n    updateTodo: (state, action) => {\n      const {\n        id,\n        text\n      } = action.payload;\n      const todo = state.items.find(t => t.id === id);\n      if (todo) todo.text = text;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchTodos.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.items = action.payload;\n    }).addCase(fetchTodos.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  addTodo,\n  removeTodo,\n  updateTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTodos","response","Promise","resolve","setTimeout","id","text","completed","todoSlice","name","initialState","items","status","error","reducers","addTodo","state","action","push","payload","removeTodo","filter","todo","updateTodo","find","t","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["/Users/ptmff/Documents/Проекты/TODO_List/todo_list/frontend/src/store/todoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Асинхронное действие для загрузки данных (пример имитации API-запроса)\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await new Promise((resolve) => {\n    setTimeout(() => {\n      resolve([{ id: 1, text: 'Sample Todo', completed: false }]);\n    }, 1000);\n  });\n  return response;\n});\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [],\n    status: 'idle',\n    error: null,\n  },\n  reducers: {\n    addTodo: (state, action) => {\n      state.items.push(action.payload);\n    },\n    removeTodo: (state, action) => {\n      state.items = state.items.filter((todo) => todo.id !== action.payload);\n    },\n    updateTodo: (state, action) => {\n      const { id, text } = action.payload;\n      const todo = state.items.find((t) => t.id === id);\n      if (todo) todo.text = text;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchTodos.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchTodos.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.items = action.payload;\n      })\n      .addCase(fetchTodos.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const { addTodo, removeTodo, updateTodo } = todoSlice.actions;\nexport default todoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAME,QAAQ,GAAG,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9CC,UAAU,CAAC,MAAM;MACfD,OAAO,CAAC,CAAC;QAAEE,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,aAAa;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;EACF,OAAON,QAAQ;AACjB,CAAC,CAAC;AAEF,MAAMO,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACjB,EAAE,KAAKY,MAAM,CAACE,OAAO,CAAC;IACxE,CAAC;IACDI,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEZ,EAAE;QAAEC;MAAK,CAAC,GAAGW,MAAM,CAACE,OAAO;MACnC,MAAMG,IAAI,GAAGN,KAAK,CAACL,KAAK,CAACa,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACpB,EAAE,KAAKA,EAAE,CAAC;MACjD,IAAIiB,IAAI,EAAEA,IAAI,CAAChB,IAAI,GAAGA,IAAI;IAC5B;EACF,CAAC;EACDoB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC5B,UAAU,CAAC6B,OAAO,EAAGb,KAAK,IAAK;MACtCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAAC5B,UAAU,CAAC8B,SAAS,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC,CACDS,OAAO,CAAC5B,UAAU,CAAC+B,QAAQ,EAAE,CAACf,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACJ,KAAK,CAACmB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEjB,OAAO;EAAEK,UAAU;EAAEG;AAAW,CAAC,GAAGf,SAAS,CAACyB,OAAO;AACpE,eAAezB,SAAS,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}